# -*- coding: utf-8 -*-
"""Lab2-Assig.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1akLtH3yfm2J327S1UWLfHaDYTeWJvRF1
"""

import torch
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import tensorboard
import random

m=4
x=torch.rand((m, 784))
w=torch.rand((784,10))
b=torch.rand((10,))
lr=0.1
y=torch.zeros((m,10))
for i in range(0,m):
    y[i][random.randint(0,9)]=1

print(x.shape)
print(w.shape)
print(b.shape)
print(y.shape)
print(w)
print(b)

def sigmoid(x):
    # print(x)
    # print(torch.exp(-x))
    # print(1+torch.exp(-x))
    return 1/(1+torch.exp(-x))

def train_perceptron(X:torch.Tensor,W:torch.Tensor,b:torch.Tensor,y_true:torch.Tensor,lr:float):
    z=X@W+b
    y_pred=sigmoid(z)
    err=y_true-y_pred
    W_new=W+lr*x.T@err
    b_new=b+lr*err.mean(axis=0)
    return W_new,b_new

w,b=train_perceptron(x,w,b,y,lr)
print(w)
print(b)

